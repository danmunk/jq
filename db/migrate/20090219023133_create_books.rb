class CreateBooks < ActiveRecord::Migration
  def self.up
    create_table    :books, :force => true do |t|
      t.string      :title
      t.string      :author
      t.text        :description
      t.timestamps
    end

    Book.create :title => "JavaScript: The Definitive Guide",
                :author => "David Flanagan",
                :description => %Q{Since the earliest days of Internet scripting, Web developers have considered JavaScript: The Definitive Guide an essential resource. David Flanagan's approach, which combines tutorials and examples with easy-to-use syntax guides and object references, suits the typical programmer's requirements nicely. The brand-new fourth edition of Flanagan's "Rhino Book" includes coverage of JavaScript 1.5, JScript 5.5, ECMAScript 3, and the Document Object Model (DOM) Level 2 standard from the World Wide Web Consortium (W3C). Interestingly, the author has shifted away from specifying--as he did in earlier editions--what browsers support each bit of the language. Rather than say Netscape 3.0 supports the Image object while Internet Explorer 3.0 does not, he specifies that JavaScript 1.1 and JScript 3.0 support Image. More usefully, he specifies the contents of independent standards like ECMAScript, which encourages scripters to write applications for these standards and browser vendors to support them. As Flanagan says, JavaScript and its related subjects are very complex in their pure forms. It's impossible to keep track of the differences among half a dozen vendors' generally similar implementations. Nonetheless, a lot of examples make reference to specific browsers' capabilities.}
    Book.create :title => "JavaScript: The Good Parts",
                :author => "Douglas Crockford ",
                :description => "Most programming languages contain good and bad parts, but JavaScript has more than its share of the bad, having been developed and released in a hurry before it could be refined. This authoritative book scrapes away these bad features to reveal a subset of JavaScript that's more reliable, readable, and maintainable than the language as a whole-a subset you can use to create truly extensible and efficient code. Considered the JavaScript expert by many people in the development community, author Douglas Crockford identifies the abundance of good ideas that make JavaScript an outstanding object-oriented programming language-ideas such as functions, loose typing, dynamic objects, and an expressive object literal notation. Unfortunately, these good ideas are mixed in with bad and downright awful ideas, like a programming model based on global variables. When Java applets failed, JavaScript became the language of the Web by default, making its popularity almost completely independent of its qualities as a programming language. In JavaScript: The Good Parts, Crockford finally digs through the steaming pile of good intentions and blunders to give you a detailed look at all the genuinely elegant parts of JavaScript, including: Syntax Objects Functions Inheritance Arrays Regular expressions Methods Style Beautiful features"
    Book.create :title => "JavaScript: The Missing Manual",
                :author => "David McFarland ",
                :description => %Q{JavaScript is essential for creating modern, interactive Web sites. But, unlike HTML and CSS, JavaScript is a true programming language with complex rules that are challenging for most Web designers to learn. In JavaScript: The Missing Manual, bestselling author David McFarland teaches you how to use JavaScript in sophisticated ways -- even if you have little or no programming experience. In a clear, entertaining way, the book starts out by teaching you how to build a basic JavaScript program. Then, once you've mastered the structure and terminology, you'll learn how to use advanced JavaScript tools to add useful interactivity to your sites quickly and painlessly, rather than scripting everything from scratch. To jump-start your progress, the book offers several "living examples" -- step-by-step tutorials for building Web site components with JavaScript using raw materials, such as graphics and half-completed Web pages, that you can download from the book's companion Web site. In this book, you will learn: How to get started. The book introduces the building blocks of JavaScript, and general tips on computer programming. Learn to add scripts to a Web page; store and manipulate information; communicate with the browser window; respond to events like mouse clicks and form submissions; and identify and modify HTML. How to build Web Page Features. McFarland provides real-world examples of JavaScript in action. Learn to create pop-up navigation bars, enhance HTML tables, build an interactive photo gallery, and make Web forms more usable. Create interesting user interfaces with tabbed panels, accordion panels and pop-up dialog boxes. How to troubleshoot and debug. The book will teach you howto avoid the ten most common errors new programmers make, and how to find and fix bugs. How to communicate with the Web server. In addition to basic JavaScript, this manual covers Ajax, the approach that made JavaScript glamorous. Learn to use JavaScript to communicate with a server so that your Web pages can receive information without having to reload.}
    Book.create :title => "Head First JavaScript",
                :author => "Michael Morrison ",
                :description => %Q{So you're ready to make the leap from writing HTML and CSS web pages to creating dynamic web applications. You want to take your web skills to the next level. And you're finally ready to add "programmer" to the resume. It sounds like you're ready to learn the Web's hottest programming language: JavaScript. Head First JavaScript is your ticket to going beyond copying and pasting the code from someone else's web site, and writing your own interactive web pages.}
  end

  def self.down
    drop_table :books
  end
end
